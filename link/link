#!/usr/bin/env bash

# Create symbolic links of dotfiles.

set -eu
trap 'echo LINK STOPPED: $0:$LINENO' ERR INT

DOTPATH="$(cd "$(dirname "$0")/.."; pwd)"

source "$DOTPATH/link/link_table"
source "$DOTPATH/link/helper.sh"

check_srcpath_exists() {
    if [ ! -e "$srcpath" ]; then
        echo "$srcpath doesn't exist." >&2
        exit 1
    fi
}

check_destpath_is_linkable() {
    if [ -e "$destpath" ] && [ ! -L "$destpath" ]; then
        echo "$destpath exists but is not a symlnk." >&2
        exit 1
    fi
}

link_dotfile() {
    case $(dotfile_type "$srcpath") in
        normal)
            local cmd="ln -nsf $srcpath $destpath"
            ;;
        systemd)
            local user=$($sudo && echo '' || echo '--user')
            local cmd="systemctl $user link $srcpath"
            ;;
    esac

    local prefix=$($sudo && echo 'sudo' || echo '')
    $prefix mkdir -p $(dirname "$destpath")
    $prefix $cmd
    echo "-- $dotfile is linked. --"
}

for link in "${LINKS[@]}"; do
    prepare_variables "$link"

    if [ ${DOTFILES_LINKTEST:-0} -eq 1 ]; then 
        check_srcpath_exists
    elif [ ${DOTFILES_DRYRUN:-0} -ne 0 ]; then
        check_srcpath_exists && check_destpath_is_linkable
    else
        check_srcpath_exists && check_destpath_is_linkable && link_dotfile
    fi
done
