### tmux config ###

### Basic options

set -g escape-time 1
set -g mouse on
set -g status-keys emacs
set -g renumber-windows
set -g remain-on-exit failed

# Use tmux terminfo to display italic font and undercurl correctly.
# Check commands:
#   - italic ... echo -e "\e[3mitalic\e[0m"
#   - undercurl ... echo -e "\e[4:3mundercurl"
# In the case they don't work, we can build tmux terminfo by hand.
# For example, follow the below steps on macOS.
#   1. brew install ncurses
#   2. /opt/homebrew/opt/ncurses/bin/infocmp tmux-256color > ~/tmux-256color.info
#   3. Edit tmux-256color.info manually to display undercurl in Neovim (0.9.4).
#     - Add `Smulx=\E[4\:%p1%dm,` to the end of the line starting with `smkx=...` .
#       https://zenn.dev/yushin_hirano/articles/e4aae8a7913f6a
#   4. tic -xe tmux-256color ~/tmux-256color.info
#     - This creates ~/.terminfo directory
set -g default-terminal "tmux-256color"

# Tell tmux about some terminals' features that tmux cannot detect automatically.
set -ga terminal-features ",alacritty:RGB,alacritty:usstyle"
set -ga terminal-features ",foot:RGB,foot:usstyle"

set -g status-position bottom
set -g status-interval 2

### Key bindings

unbind C-b
set -g prefix C-q

# Disable the `next-layout` shortcut since I sometimes accidentally change the layout by this.
unbind Space

bind R source-file ~/.tmux.conf \; display "Config reloaded."

# Window splitting
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind i split-window -h -c "#{pane_current_path}"
bind u split-window -v -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"
bind v split-window -v -l '30%' -c "#{pane_current_path}"
bind V split-window -h -l '36%' -c "#{pane_current_path}"
bind o new-window -c "#{pane_current_path}"
bind C-o new-window -c "#{pane_current_path}"

bind < swap-window -t -1 \; previous-window
bind > swap-window -t +1 \; next-window

bind "'" last-window
bind "C-'" last-window

# swap-pane is mapped to { and } by default.

bind T choose-tree -Zw
bind Enter resize-pane -Z
bind C-Enter resize-pane -Z

# Change windows quickly.
bind C-n next-window
bind C-p previous-window

# Pane selecting
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind C-h select-pane -L
bind C-j select-pane -D
bind C-k select-pane -U
bind C-l select-pane -R

bind -T eq w select-layout even-horizontal
bind -T eq h select-layout even-vertical
bind = switch-client -T eq

bind -T resize -r h resize-pane -L 3
bind -T resize -r j resize-pane -D 1
bind -T resize -r k resize-pane -U 1
bind -T resize -r l resize-pane -R 3
bind -T resize v resize-pane -y 36%
bind -T resize V resize-pane -x 30%
bind r switch-client -T resize

# Use Vi-like keybindings in copy-mode
set-window-option -g mode-keys vi
bind -T copy-mode-vi v send-keys -X rectangle-off \; send-keys -X begin-selection
bind -T copy-mode-vi C-v send-keys -X rectangle-on \; send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel
bind -T copy-mode-vi C-k send-keys -X previous-prompt
bind -T copy-mode-vi C-j send-keys -X next-prompt
bind -T copy-mode-vi / command-prompt -i -I "#{pane_search_string}" -T search -p "/" {
    send-keys -X search-forward-incremental "%%"
}
bind -T copy-mode-vi ? command-prompt -i -I "#{pane_search_string}" -T search -p "?" {
    send-keys -X search-backward-incremental "%%"
}

### Windows and Panes

# Toggle mouse mode. If the mode is on, we can't
# copy from the terminal screen using mouse..
bind m set -g mouse

# Display pane titles with index to clarify the active pane.
set -g pane-border-status top
set -g pane-border-format ""

### Styling

# Everforest color palette.
# https://github.com/sainnhe/everforest/tree/master
%hidden bg0="#2d353b"
%hidden bg1="#343f44"
%hidden bg2="#3d484d"
%hidden bg4="#4f585e"
%hidden bg_red="#514045"
%hidden bg_blue="#3a515d"
%hidden white="#d3c6aa" # fg
%hidden yellow="#dbbc7f"
%hidden red="#e67e80"
%hidden green="#a7c080"
%hidden blue="#7fbbb3"
%hidden grey0="#7a8478"
%hidden grey2="#9da9a0"

set -g mode-style "fg=$white,bg=$bg_red"
set -g message-style "fg=$white,bg=$bg_blue"

set -g copy-mode-match-style "fg=$bg0,bg=$green"
set -g copy-mode-current-match-style "fg=$bg0,bg=$red"

set -g pane-border-style fg="$bg_blue"
set -g pane-active-border-style "fg=$blue"

set -g status-style "fg=$white,bg=$bg1"
set -g status-right ""
set -g status-left-length 60
set -g status-left "#[fg=$blue,bg=$bg4]#{?client_prefix,#[fg=$yellow],} î¯ˆ #S #[bg=$bg1] "

set -g window-status-separator " "
set -g window-status-style "fg=$grey2,bg=$bg1"
set -g automatic-rename-format "#{pane_current_command} #[bold]#{b:pane_current_path}#[nobold,fg=$grey0]/"

set -g window-status-format \
"#{?window_last_flag,#[fg=$white#,bg=$bg4],#[fg=$grey2#,bg=$bg_blue]}"\
" #I #[fg=$grey2,bg=$bg1] #W#[fg=$grey0] #{?window_zoomed_flag,[Z] ,}"

set -g window-status-current-format \
"#[fg=$bg_blue,bg=$blue] #I #[fg=$white,bg=$bg1] #W #[fg=$grey0]#{?window_zoomed_flag,[Z] ,}"

# Change the color of current (active) window and inactive windows.
# The colors are aligned with Neovim's everforest colorscheme.
# https://github.com/sainnhe/everforest
set -g window-style "bg=#232a2e,fg=$bg4"
set -g window-active-style "bg=$bg0,fg=$white"

### Misc

source-file -q ~/.tmux.local.conf
