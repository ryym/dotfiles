#!/bin/bash

# A script to stage or unstage files in Git interactively.

main() {
    cmd="$1"
    shift
    case "$cmd" in
        popup) popup "$@" ;;
        run) run "$@" ;;
        _list) _list "$@" ;;
        _preview) _preview "$@" ;;
        _diff) _diff "$@" ;;
        *)
            echo 'specify valid command'
            exit 1
    esac
}

fzf_options=(
    --multi
    --no-sort
    --track
    --preview="git_interactive_status _preview {} {2}"
    --bind='start:ignore'
    --bind='h:become(git_interactive_history popup)'
    --bind='e:execute(nvim {+2})+reload-sync(git_interactive_status _list)'
    --bind='z:execute(zsh)+reload-sync(git_interactive_status _list)'
    --bind='?:execute(bat $(command -v git_interactive_status))'

    # Stage files.
    --bind='enter:execute(git add {+2})+accept'
    --bind='a:execute-silent(git add {+2})+reload-sync(git_interactive_status _list)'
    --bind='A:execute-silent(git add -u)+reload-sync(git_interactive_status _list)'
    --bind='p:execute(clear; git add --patch {+2})+reload-sync(git_interactive_status _list)'

    # Unstage files.
    --bind='u:execute-silent(git reset -- {+2})+reload-sync(git_interactive_status _list)'
    --bind='U:execute-silent(git reset .)+reload-sync(git_interactive_status _list)'

    # Revert changes.
    --bind='o:execute-silent(git checkout {+2})+reload-sync(git_interactive_status _list)'

    # View diff.
    --bind="d:execute(git_interactive_status _diff {+2} | LESS='-Ri' delta --paging always)"
    --bind="D:execute(git_interactive_status _diff | LESS='-Ri' delta --paging always)"
    --bind="C:execute(git_interactive_status _diff --cached | LESS='-Ri' delta --paging always)"
    --bind='N:execute(bat $(git ls-files --others --exclude-standard))'
    # Toggle whitespace ignorance.
    --bind='w:transform([ -z "$FZF_PREVIEW_LABEL" ] &&
        echo "change-preview-label(-w)" ||
        echo "change-preview-label()"
    )+refresh-preview'
)

popup() {
    fzf_options+=(--tmux=90%,border-native)
    run "$@"
}

run() {
    _list "$@" | fzf "${fzf_options[@]}" > /dev/null
    git status
}

_list() {
    git -c color.ui=always status --short -u "$@"
}

_preview() {
    local line="$1"
    local filename="$2"
    case "$line" in
        '??'*|'A '*)
            git diff --no-index /dev/null "$filename" | delta
            ;;
        ' D'*|D*)
            git diff @ -- "$filename" | delta
            ;;
        MM*)
            echo 󰕜 Staged
            git_interactive_status _diff --cached "$filename" | delta
            echo; echo 󰕛 Unstaged
            git_interactive_status _diff "$filename" | delta
            ;;
        ' '*)
            git_interactive_status _diff "$filename" | delta
            ;;
        *)
            git_interactive_status _diff --cached "$filename" | delta
            ;;
    esac
}

_diff() {
    whitespace=$([ -z "$FZF_PREVIEW_LABEL" ] || echo "-w")
    git diff --color=always $whitespace "$@"
}

main "$@"
